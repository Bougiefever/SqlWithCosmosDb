@using InventoryPoc.Data.Enums
@model InventoryPoc.Data.Models.Inventory.Building

@{
    ViewBag.Title = @Model.BuildingName;
}

<h2>Building @Model.BuildingName</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.BuildingName)
    @Html.HiddenFor(model => model.InventoryAssetType)
    @Html.HiddenFor(model => model.GroupId)
    <div class="form-horizontal">
        <h4>Building Address</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.Address.AddressLine1, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.AddressLine1, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Address.AddressLine1, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address.AddressLine2, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.AddressLine2, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Address.AddressLine2, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address.City, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.City, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Address.City, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address.State, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.State, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Address.State, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address.ZipCode, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.ZipCode, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Address.ZipCode, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address.Country, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.Country, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Address.Country, "", new {@class = "text-danger"})
            </div>
        </div>

        <h4>Building attributes</h4>
        <div class="form-group">
            @Html.LabelFor(model => model.BuildingStatus, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("BuildingStatus", EnumHelper.GetSelectList(typeof(BuildingStatus)), "Building Status", new {@class = "form-control"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BuildingNumber, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.BuildingNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.BuildingNumber, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.YearBuilt, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.YearBuilt, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.YearBuilt, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BuildingEnvironmentFactors, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                Climate @Html.CheckBox("Climate") Seismic @Html.CheckBox("Seismic") Wind @Html.CheckBox("Wind")
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FloodZoneCertificationNumber, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.FloodZoneCertificationNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.FloodZoneCertificationNumber, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Latitude, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Latitude, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Latitude, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Longitude, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Longitude, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Longitude, "", new {@class = "text-danger"})
            </div>
        </div>
        <h4>Occupancy Codes</h4>

        @Html.EditorFor(model => model.OccupancyList, "Occupancy")
        <h4>Custom Data Items</h4>
        @Html.EditorFor(model => model.CustomDataList, "CustomData")
        <div class="form-group">
            @Html.LabelFor(model => model.FreeformData, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.FreeformData, new {@class = "form-control", rows = "10", cols = "100"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new {groupId = Model.GroupId})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}