@using InventoryPoc.Data.Enums
@model IEnumerable<InventoryPoc.Models.AssetEntityModel>

@{
    var groupId = Request.QueryString["groupId"];
}
<h2>Inventory Assets</h2>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InventoryAssetType)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.OriginalCost)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InventoryAssetType)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.OriginalCost)
            </td>
            <td>
                @if (item.InventoryAssetType == InventoryAssetType.Building)
                {
                    @Html.ActionLink("Edit", "EditBuilding", new {groupId = groupId, entityId = item.Id})
                }
                @if (item.InventoryAssetType == InventoryAssetType.Content)
                {
                    @Html.ActionLink("Edit", "EditContent", new {groupId = groupId, entityId = item.Id})
                }
            </td>
        </tr>
    }

</table>