@using InventoryPoc.Data.Enums
@model InventoryPoc.Data.Models.Inventory.Content

@{
    ViewBag.Title = @Model.Name;
}

<h2>Building @Model.Name</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.InventoryAssetType)
    @Html.HiddenFor(model => model.GroupId)
    <div class="form-horizontal">
        <h4>Building Address</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        <div class="form-group">
            @Html.LabelFor(model => model.ContentType, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("ContentType", EnumHelper.GetSelectList(typeof(ContentType)), "Content Type", new {@class = "form-control"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AssetTag, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.AssetTag, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.AssetTag, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Manufacturer, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Manufacturer, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Manufacturer, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Model, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Model, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SerialNumber, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.SerialNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SerialNumber, "", new {@class = "text-danger"})
            </div>
        </div>

        <h4>Custom Data Items</h4>
        @Html.EditorFor(model => model.CustomDataList, "CustomData")
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new {groupId = Model.GroupId})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}